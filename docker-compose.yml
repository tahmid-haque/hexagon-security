version: '3.8'
services:
    # adapted from https://myops.medium.com/monitor-your-server-and-docker-containers-with-datadog-for-free-317b553c8530
    datadog:
        image: datadog/agent
        container_name: datadog
        restart: always
        ports:
            - 8126:8126
        environment:
            - DD_API_KEY=${DATAGOG_API_KEY}
            - DD_SITE=datadoghq.com
            - DD_HOSTNAME=hexagon-web.xyz
            - DD_APM_ENABLED=true
            - DD_LOGS_ENABLED=true
            - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
            - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
            - DD_CONTAINER_EXCLUDE=image:datadog/agent*
            - DD_CONTAINER_EXCLUDE_METRICS=image:datadog/agent*
            - DD_CONTAINER_EXCLUDE_LOGS=image:datadog/agent*
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /proc/:/host/proc/:ro
            - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
            - /opt/datadog-agent/run:/opt/datadog-agent/run:rw

    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx-proxy
        restart: always
        labels:
            com.datadoghq.ad.logs: '[{"source": "nginx-proxy", "service": "nginx-proxy"}]'
            com.datadoghq.tags.service: 'nginx-proxy'
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./certs:/etc/nginx/certs
            - ./vhost:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html

    nginx-proxy-acme:
        image: nginxproxy/acme-companion
        container_name: nginx-proxy-acme
        restart: always
        labels:
            com.datadoghq.ad.logs: '[{"source": "nginx-acme", "service": "nginx-acme"}]'
            com.datadoghq.tags.service: 'nginx-acme'
        volumes_from:
            - nginx-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./acme:/etc/acme.sh
        environment:
            - DEFAULT_EMAIL=${ACME_EMAIL}

    redis:
        image: redis:6.2.6-alpine
        container_name: redis
        restart: always
        labels:
            com.datadoghq.ad.check_names: '["redisdb"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.instances: '[{"host":"%%host%%","port":"6379","password":"${REDIS_PASSWORD}"}]'
            com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis"}]'
            com.datadoghq.tags.service: 'redis'
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - '6379:6379'

    mongodb:
        image: mongo
        container_name: mongodb
        restart: always
        labels:
            com.datadoghq.ad.check_names: '["mongo"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.instances: '[{"hosts": ["%%host%%:%%port%%"], "username": "datadog", "password" : "${DATADOG_AGENT_PASSWORD}", "database": "${MONGODB_DATABASE_NAME}"}]'
            com.datadoghq.ad.logs: '[{"source": "mongodb", "service": "mongodb"}]'
            com.datadoghq.tags.service: 'mongodb'
        ports:
            - 27017:27017
        environment:
            - MONGO_INITDB_DATABASE=${MONGODB_DATABASE_NAME}
            - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
            - DATADOG_AGENT_PASSWORD=${DATADOG_AGENT_PASSWORD}
        volumes:
            - ./scripts:/docker-entrypoint-initdb.d
            - database:/data/db

    backend:
        image: ghcr.io/utscc09/project-noaccess-backend
        container_name: backend
        depends_on:
            - redis
            - mongodb
            - datadog
        restart: always
        labels:
            com.datadoghq.ad.logs: '[{"source": "backend", "service": "backend"}]'
            com.datadoghq.tags.service: 'backend'
        expose:
            - 4000
        environment:
            - MAILGUN_API_KEY=${MAILGUN_API_KEY}
            - VIRTUAL_HOST=hexagon-web.xyz,www.hexagon-web.xyz
            - VIRTUAL_PATH=/api
            - LETSENCRYPT_HOST=hexagon-web.xyz,www.hexagon-web.xyz
            - NODE_ENV=production
            - MONGODB_URI=${MONGODB_URI}
            - JWT_SECRET=${JWT_SECRET}
            - REDIS_URI=${REDIS_URI}
            - DATADOG_HOST=datadog
            - DD_AGENT_HOST=datadog
            - DD_TRACE_AGENT_PORT=8126

    frontend:
        image: ghcr.io/utscc09/project-noaccess-frontend
        container_name: frontend
        depends_on:
            - backend
        restart: always
        labels:
            com.datadoghq.ad.check_names: '["nginx"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
            com.datadoghq.ad.logs: '[{"source": "nginx", "service": "frontend"}]'
            com.datadoghq.tags.service: 'frontend'
        expose:
            - 80
        environment:
            - VIRTUAL_HOST=hexagon-web.xyz,www.hexagon-web.xyz
            - VIRTUAL_PATH=/
            - LETSENCRYPT_HOST=hexagon-web.xyz,www.hexagon-web.xyz
volumes:
    database:
